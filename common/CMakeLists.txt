PROJECT(${COMMON_LIB_NAME})

file(GLOB_RECURSE COMMON_SOURCES *.hpp *.cpp)


ADD_LIBRARY(${COMMON_LIB_NAME} ${LIBRARY_TYPE} ${COMMON_SOURCES} )
TARGET_LINK_LIBRARIES( ${COMMON_LIB_NAME} ${OpenCV_LIBS} )
TARGET_LINK_LIBRARIES( ${COMMON_LIB_NAME} ${LOG_LIB_NAME} )
TARGET_LINK_LIBRARIES( ${COMMON_LIB_NAME} ${VIDEO_INPUT_LIB_NAME} )
TARGET_LINK_LIBRARIES( ${COMMON_LIB_NAME} ${ALERTS_LIB_NAME} )
TARGET_LINK_LIBRARIES( ${COMMON_LIB_NAME} ${TEXT_LIB_NAME} ${IMAGE_LIB_NAME} )

TARGET_LINK_LIBRARIES( ${COMMON_LIB_NAME} ${Qt5Core_LIBRARIES} ${HELP_LINK_LIBRARIES} )

IF (BUILD_ZLIB)
    TARGET_LINK_LIBRARIES( ${COMMON_LIB_NAME} ${ZIP_LIB_NAME} )
ENDIF (BUILD_ZLIB)


IF (BUILD_DB)
    add_definitions( -D__WITH_DB__)
    TARGET_LINK_LIBRARIES( ${COMMON_LIB_NAME} ${DB_LIB_NAME} )
ENDIF (BUILD_DB)

IF (BUILD_MOTION_ALGO)
    TARGET_LINK_LIBRARIES( ${COMMON_LIB_NAME} ${MOTION_ALGO_LIB_NAME})
    IF (BUILD_ALGO_RND)
        TARGET_LINK_LIBRARIES( ${COMMON_LIB_NAME} ${ALGO_RND_LIB_NAME})
    ENDIF (BUILD_ALGO_RND)
ENDIF (BUILD_MOTION_ALGO)

TARGET_LINK_LIBRARIES( ${COMMON_LIB_NAME} ${CONDITIONS_LIB_NAME})

INSTALL (
    TARGETS ${COMMON_LIB_NAME}
    RUNTIME DESTINATION ${INSTALL_BIN_DIR}
    LIBRARY DESTINATION ${INSTALL_LIB_DIR}
    ARCHIVE DESTINATION ${INSTALL_LIB_DIR}
)

IF (INSTALL_HEADERS)
    FILE(GLOB INSTALL_HEADERS  "*.hpp" )
    STRING(REPLACE ${CMAKE_ROOT_SOURCES} ""  INSTALL_PATH ${PROJECT_SOURCE_DIR})
    INSTALL (
        FILES  ${INSTALL_HEADERS}
        DESTINATION ${INSTALL_SRC_DIR}/${INSTALL_PATH}/
    )
ENDIF (INSTALL_HEADERS)
